(global-set-key (kbd "C-@") 'helm-project-list)
(global-set-key (kbd "TAB") 'self-insert-command) ; insert TAB character

(defun leader-bind (sequence action) (define-key evil-normal-state-map (kbd (concat "SPC " sequence)) action))
(defun leader-help (prefix description) (which-key-add-key-based-replacements (concat "SPC " prefix) description))

(leader-help "b" "buffer")
(leader-help "e" "emacs")
(leader-help "f" "file")
(leader-help "h" "help")
(leader-help "j" "jump")
(leader-help "m" "mark ring")
(leader-help "q" "macro ring")
(leader-help "s" "search")
(leader-help "t" "tree")
(leader-help "y" "kill ring")

(leader-bind "b b" 'helm-buffers-list)
(leader-bind "b c" 'kill-this-buffer)
(leader-bind "b k" 'kill-buffer)
(leader-bind "b l" 'list-buffers)
(leader-bind "b o" 'kill-other-buffers)
(leader-bind "b s" 'save-buffer)
(leader-bind "b w" 'read-only-mode)
(leader-bind "e c" 'save-buffers-kill-terminal)
(leader-bind "e r" 'reload-emacs)
(leader-bind "e x" 'helm-M-x)
(leader-bind "f c" 'copy-file)
(leader-bind "f d" 'delete-current-buffer-file)
(leader-bind "f f" 'helm-projectile-find-file)
(leader-bind "f m" 'rename-current-buffer-file)
(leader-bind "f n" 'find-file)
(leader-bind "f r" 'helm-projectile-recentf)
(leader-bind "h F" 'describe-face)
(leader-bind "h b" 'describe-bindings)
(leader-bind "h c" 'describe-char)
(leader-bind "h f" 'describe-function)
(leader-bind "h k" 'describe-key)
(leader-bind "h m" 'describe-mode)
(leader-bind "h s" 'describe-symbol)
(leader-bind "h v" 'describe-variable)
(leader-bind "j d" 'find-function)
(leader-bind "j i" 'open-init-el)
(leader-bind "m m" 'helm-mark-ring)
(leader-bind "q q" 'helm-execute-kmacro)
(leader-bind "s a" 'helm-projectile-ack)
(leader-bind "t f" 'neotree-find)
(leader-bind "t h" 'neotree-hidden-file-toggle)
(leader-bind "t r" 'neotree-refresh)
(leader-bind "t s" 'neotree-stretch-toggle)
(leader-bind "t t" 'neotree-toggle-project)
(leader-bind "y y" 'helm-show-kill-ring)

;(define-key org-mode-map (kbd "M-h") 'org-metaleft)
;(define-key org-mode-map (kbd "M-j") 'org-metadown)
;(define-key org-mode-map (kbd "M-k") 'org-metaup)
;(define-key org-mode-map (kbd "M-l") 'org-metaright)

(add-hook 'neotree-mode-hook
	(lambda ()
		(define-key evil-normal-state-local-map (kbd "c") 'neotree-copy-node)
		(define-key evil-normal-state-local-map (kbd "d") 'neotree-delete-node)
		(define-key evil-normal-state-local-map (kbd "m") 'neotree-rename-node)
		(define-key evil-normal-state-local-map (kbd "n") 'neotree-create-node)
		(define-key evil-normal-state-local-map (kbd "o") 'neotree-enter)
		(define-key evil-normal-state-local-map (kbd "O") 'neotree-change-root)
	))
